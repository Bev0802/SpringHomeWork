<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group GB">
        <stringProp name="TestPlan.comments">Test notes</stringProp>
        <intProp name="ThreadGroup.num_threads">100</intProp>
        <intProp name="ThreadGroup.ramp_time">60</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer">
          <stringProp name="ConstantTimer.delay">1000</stringProp>
          <stringProp name="RandomTimer.range">2000</stringProp>
        </UniformRandomTimer>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request GET">
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">users</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;!DOCTYPE html&gt;&#xd;
&lt;html&gt;&#xd;
&lt;head&gt;&#xd;
    &lt;meta charset=&quot;UTF-8&quot;&gt;&#xd;
    &lt;title&gt;Приложение Заметки&lt;/title&gt;&#xd;
    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css&quot;&#xd;
          rel=&quot;stylesheet&quot;&#xd;
          integrity=&quot;sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN&quot;&#xd;
          crossorigin=&quot;anonymous&quot;&gt;&#xd;
    &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.googleapis.com&quot;&gt;&#xd;
    &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.gstatic.com&quot; crossorigin&gt;&#xd;
    &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Noto+Serif:ital,wght@0,400;0,500;0,700;1,400&amp;family=Open+Sans:wght@300;400;700&amp;family=Roboto:ital,wght@0,300;0,400;1,500&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt;&#xd;
    &lt;link rel=&quot;stylesheet&quot; href=&quot;http://localhost:8080/css/style.css&quot;&gt;&#xd;
&lt;/head&gt;&#xd;
&lt;body&gt;&#xd;
&lt;div class=&quot;container&quot;&gt;&#xd;
    &lt;h1 class=&quot;main-heading&quot;&gt;Список Пользователей&lt;/h1&gt;&#xd;
    &lt;a href=&quot;/new&quot; class=&quot;button&quot;&gt;Добавить&lt;/a&gt;&#xd;
    &lt;div&gt;&#xd;
        &lt;table&gt;&#xd;
            &lt;thead&gt;&#xd;
            &lt;tr&gt;&#xd;
                &lt;th&gt;#&lt;/th&gt;&#xd;
                &lt;th&gt;Имя&lt;/th&gt;&#xd;
                &lt;th&gt;Действия с пользователями&lt;/th&gt;&#xd;
            &lt;/tr&gt;&#xd;
            &lt;/thead&gt;&#xd;
            &lt;tbody&gt;&#xd;
            &lt;tr&gt;&#xd;
                &lt;td&gt;1&lt;/td&gt;&#xd;
                &lt;td&gt;Яша&lt;/td&gt;&#xd;
                &lt;td&gt;&#xd;
                    &lt;a href=&quot;/users/4/notes&quot; class=&quot;button&quot;&gt;Заметки&lt;/a&gt;&#xd;
                    &lt;a href=&quot;/users/4/update&quot; class=&quot;button&quot;&gt;Изменить&lt;/a&gt;&#xd;
                    &lt;form action=&quot;/users/4/delete&quot; method=&quot;post&quot; style=&quot;display: inline-block;&quot;&gt;&#xd;
                        &lt;input type=&quot;hidden&quot; name=&quot;_method&quot; value=&quot;delete&quot; /&gt;&#xd;
                        &lt;button type=&quot;submit&quot; class=&quot;button&quot;&gt;Удалить&lt;/button&gt;&#xd;
                    &lt;/form&gt;&#xd;
                &lt;/td&gt;&#xd;
            &lt;/tr&gt;&#xd;
            &lt;tr&gt;&#xd;
                &lt;td&gt;2&lt;/td&gt;&#xd;
                &lt;td&gt;Пуся&lt;/td&gt;&#xd;
                &lt;td&gt;&#xd;
                    &lt;a href=&quot;/users/3/notes&quot; class=&quot;button&quot;&gt;Заметки&lt;/a&gt;&#xd;
                    &lt;a href=&quot;/users/3/update&quot; class=&quot;button&quot;&gt;Изменить&lt;/a&gt;&#xd;
                    &lt;form action=&quot;/users/3/delete&quot; method=&quot;post&quot; style=&quot;display: inline-block;&quot;&gt;&#xd;
                        &lt;input type=&quot;hidden&quot; name=&quot;_method&quot; value=&quot;delete&quot; /&gt;&#xd;
                        &lt;button type=&quot;submit&quot; class=&quot;button&quot;&gt;Удалить&lt;/button&gt;&#xd;
                    &lt;/form&gt;&#xd;
                &lt;/td&gt;&#xd;
            &lt;/tr&gt;&#xd;
            &lt;tr&gt;&#xd;
                &lt;td&gt;3&lt;/td&gt;&#xd;
                &lt;td&gt;Екатерина&lt;/td&gt;&#xd;
                &lt;td&gt;&#xd;
                    &lt;a href=&quot;/users/13/notes&quot; class=&quot;button&quot;&gt;Заметки&lt;/a&gt;&#xd;
                    &lt;a href=&quot;/users/13/update&quot; class=&quot;button&quot;&gt;Изменить&lt;/a&gt;&#xd;
                    &lt;form action=&quot;/users/13/delete&quot; method=&quot;post&quot; style=&quot;display: inline-block;&quot;&gt;&#xd;
                        &lt;input type=&quot;hidden&quot; name=&quot;_method&quot; value=&quot;delete&quot; /&gt;&#xd;
                        &lt;button type=&quot;submit&quot; class=&quot;button&quot;&gt;Удалить&lt;/button&gt;&#xd;
                    &lt;/form&gt;&#xd;
                &lt;/td&gt;&#xd;
            &lt;/tr&gt;&#xd;
            &lt;tr&gt;&#xd;
                &lt;td&gt;4&lt;/td&gt;&#xd;
                &lt;td&gt;Сева&lt;/td&gt;&#xd;
                &lt;td&gt;&#xd;
                    &lt;a href=&quot;/users/14/notes&quot; class=&quot;button&quot;&gt;Заметки&lt;/a&gt;&#xd;
                    &lt;a href=&quot;/users/14/update&quot; class=&quot;button&quot;&gt;Изменить&lt;/a&gt;&#xd;
                    &lt;form action=&quot;/users/14/delete&quot; method=&quot;post&quot; style=&quot;display: inline-block;&quot;&gt;&#xd;
                        &lt;input type=&quot;hidden&quot; name=&quot;_method&quot; value=&quot;delete&quot; /&gt;&#xd;
                        &lt;button type=&quot;submit&quot; class=&quot;button&quot;&gt;Удалить&lt;/button&gt;&#xd;
                    &lt;/form&gt;&#xd;
                &lt;/td&gt;&#xd;
            &lt;/tr&gt;&#xd;
            &lt;/tbody&gt;&#xd;
        &lt;/table&gt;&#xd;
        &#xd;
    &lt;/div&gt;&#xd;
&lt;/div&gt;&#xd;
&lt;img src=&quot;http://localhost:8080/images/note_form.png&quot; alt=&quot;Форма добавления заметки&quot;&gt;&#xd;
&lt;/body&gt;&#xd;
&lt;/html&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion">
          <collectionProp name="Asserion.test_strings"/>
          <stringProp name="Assertion.custom_message"></stringProp>
          <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
          <boolProp name="Assertion.assume_success">false</boolProp>
          <intProp name="Assertion.test_type">16</intProp>
        </ResponseAssertion>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request Get /new">
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/new</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;!DOCTYPE html&gt;&#xd;
&lt;html&gt;&#xd;
&lt;head&gt;&#xd;
    &lt;meta charset=&quot;UTF-8&quot;&gt;&#xd;
    &lt;title&gt;Добавить пользователя&lt;/title&gt;&#xd;
    &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css&quot;&#xd;
          rel=&quot;stylesheet&quot;&#xd;
          integrity=&quot;sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN&quot;&#xd;
          crossorigin=&quot;anonymous&quot;&gt;&#xd;
    &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.googleapis.com&quot;&gt;&#xd;
    &lt;link rel=&quot;preconnect&quot; href=&quot;https://fonts.gstatic.com&quot; crossorigin&gt;&#xd;
    &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Noto+Serif:ital,wght@0,400;0,500;0,700;1,400&amp;family=Open+Sans:wght@300;400;700&amp;family=Roboto:ital,wght@0,300;0,400;1,500&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt;&#xd;
    &lt;link rel=&quot;stylesheet&quot; href=&quot;http://localhost:8080/css/style.css&quot;&gt;&#xd;
&lt;/head&gt;&#xd;
&lt;body&gt;&#xd;
&lt;div class=&quot;container&quot;&gt;&#xd;
    &lt;h1 class=&quot;main-heading&quot;&gt;Добавить пользователя&lt;/h1&gt;&#xd;
    &lt;div class=&quot;form-container&quot;&gt;&#xd;
        &lt;form action=&quot;/new&quot; method=&quot;post&quot;&gt;&#xd;
            &lt;div class=&quot;mb-3&quot;&gt;&#xd;
                &lt;label for=&quot;userName&quot; class=&quot;form-label&quot;&gt;Имя&lt;/label&gt;&#xd;
                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;userName&quot; placeholder=&quot;Введите имя&quot; name=&quot;name&quot; value=&quot;&quot;&gt;&#xd;
            &lt;/div&gt;&#xd;
            &lt;div class=&quot;form-group&quot;&gt;&#xd;
                &lt;div class=&quot;mb-3&quot;&gt;&#xd;
                    &lt;label for=&quot;userPassword&quot; class=&quot;form-label&quot;&gt;Пароль&lt;/label&gt;&#xd;
                    &lt;input type=&quot;password&quot; class=&quot;form-control&quot; id=&quot;userPassword&quot; placeholder=&quot;Введите пароль&quot; name=&quot;password&quot; value=&quot;&quot;&gt;&#xd;
                &lt;/div&gt;&#xd;
                &lt;button type=&quot;submit&quot; class=&quot;button&quot;&gt;Добавить&lt;/button&gt;&#xd;
                &lt;a href=&quot;/users&quot; class=&quot;button&quot;&gt;Отменить&lt;/a&gt;&#xd;
            &lt;/div&gt;&#xd;
        &lt;/form&gt;&#xd;
    &lt;/div&gt;&#xd;
&lt;/div&gt;&#xd;
&lt;img src=&quot;http://localhost:8080/images/note_form.png&quot; alt=&quot;Форма добавления заметки&quot;&gt;&#xd;
&lt;/body&gt;&#xd;
&lt;/html&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request POST /new">
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/new</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="name" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Человек</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">name</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request POST /new">
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/new</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="name" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">Кошка</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">name</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
